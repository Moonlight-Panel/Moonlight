@page "/admin/users"
@using MoonCore.Extensions
@using Moonlight.Client.App.Services
@using Moonlight.Shared.Http.Resources
@using Moonlight.Shared.Http.Resources.Admin.Users
@using Moonlight.Client.App.UI.Components

@inject IdentityService IdentityService

@if (IsLoaded)
{
    <SmartTable2 TItem="DetailUserResponse" ItemsCallback="ItemsCallback">
        <SmartColumn TItem="DetailUserResponse" Field="@(x => x.Id)" Title="Id" />
        <SmartColumn TItem="DetailUserResponse" Field="@(x => x.Username)" Title="Username" />
        <SmartColumn TItem="DetailUserResponse" Field="@(x => x.Email)" Title="Email" />
    </SmartTable2>
}

@code
{
    private DetailUserResponse[] Users = [];
    private bool IsLoaded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsLoaded = true;
            await InvokeAsync(StateHasChanged);
        }
    }

    private async Task<PagedResponse<DetailUserResponse>> ItemsCallback(int page, int pageSize)
    {
        var response = await IdentityService.Http.GetAsync($"admin/users?page={page}&pageSize={pageSize}");

        await response.HandlePossibleApiError();

        return await response.ParseAsJson<PagedResponse<DetailUserResponse>>();
    }
}

@page "/admin/store/expired"

@using BlazorTable
@using Microsoft.EntityFrameworkCore
@using MoonCore.Abstractions
@using MoonCore.Helpers
@using Moonlight.Core.Extensions.Attributes

@using Moonlight.Core.Models.Enums

@using Moonlight.Features.ServiceManagement.Entities
@using Moonlight.Features.StoreSystem.UI.Components

@attribute [RequirePermission(Permission.AdminStore)]

@inject Repository<Service> ServiceRepository

<AdminStoreNavigation Index="3"/>

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Expired services</h3>
    </div>
    <div class="card-body">
        <LazyLoader Load="Load">
            <Table TableItem="Service"
                   Items="Services"
                   PageSize="50"
                   TableClass="table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3 fs-6"
                   TableHeadClass="fw-bold text-muted">
                <Column TableItem="Service" Field="@(x => x.Id)" Title="Id" Filterable="true" Sortable="true"/>
                <Column TableItem="Service" Field="@(x => x.Nickname)" Title="Name" Filterable="true" Sortable="false">
                    <Template>
                        <a href="/admin/services/view/@(context.Id)">@(context.Nickname ?? $"Service {context.Id}")</a>
                    </Template>
                </Column>
                <Column TableItem="Service" Field="@(x => x.Owner)" Title="Owner" Filterable="false" Sortable="false">
                    <Template>
                        <span>@(context.Owner.Username)</span>
                    </Template>
                </Column>
                <Column TableItem="Service" Field="@(x => x.Product)" Title="Type" Filterable="false" Sortable="false">
                    <Template>
                        <span>@(context.Product.Type)</span>
                    </Template>
                </Column>
                <Column TableItem="Service" Field="@(x => x.Product)" Title="Product" Filterable="false" Sortable="false">
                    <Template>
                        <span>@(context.Product.Name)</span>
                    </Template>
                </Column>
                <Column TableItem="Service" Field="@(x => x.CreatedAt)" Title="Created at" Filterable="true" Sortable="true"/>
                <Column TableItem="Service" Field="@(x => x.RenewAt)" Title="" Filterable="false" Sortable="true">
                    <Template>
                        <span>Expired @(Formatter.FormatAgoFromDateTime(context.RenewAt))</span>
                    </Template>
                </Column>
                <Pager ShowPageNumber="true" ShowTotalCount="true" AlwaysShow="true"/>
            </Table>
        </LazyLoader>
    </div>
</div>

@code
{
    private Service[] Services;

    private Task Load(LazyLoader lazyLoader)
    {
        Services = ServiceRepository
            .Get()
            .Include(x => x.Owner)
            .Include(x => x.Product)
            .Where(x => x.RenewAt < DateTime.UtcNow)
            .ToArray();

        return Task.CompletedTask;
    }
}
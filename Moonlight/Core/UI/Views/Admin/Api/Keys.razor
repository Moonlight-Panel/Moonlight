@page "/admin/api/keys"

@using MoonCore.Blazor.Models.FastForms
@using MoonCore.Helpers
@using Moonlight.Core.Database.Entities
@using Moonlight.Core.UI.Components.Navigations

@inject ClipboardService ClipboardService
@inject ToastService ToastService

@attribute [RequirePermission(9998)]

<AdminApiNavigation Index="1"/>

<div class="mt-5">
    <FastCrud TItem="ApiKey"
              OnConfigure="OnConfigure"
              OnConfigureCreate="OnConfigureFrom"
              OnConfigureEdit="OnConfigureFrom">
        <View>
            <MCBColumn TItem="ApiKey" Field="@(x => x.Key)" Title="Key">
                <Template>
                    @{
                        var apiKeyHalf = Formatter.CutInHalf(context!.Key);
                    }

                    <div>
                        <span class="blur-unless-hover">
                            @apiKeyHalf
                            [...]
                        </span>
                    </div>
                </Template>
            </MCBColumn>
            <MCBColumn TItem="ApiKey" Field="@(x => x.Description)" Title="Description"/>
            <MCBColumn TItem="ApiKey" Field="@(x => x.CreatedAt)" Title="Created at">
                <Template>
                    @Formatter.FormatDate(context!.CreatedAt)
                </Template>
            </MCBColumn>
            <MCBColumn TItem="ApiKey" Field="@(x => x.ExpiresAt)" Title="Expires at">
                <Template>
                    @Formatter.FormatDate(context!.ExpiresAt)
                </Template>
            </MCBColumn>
            <MCBColumn TItem="ApiKey" Field="@(x => x.PermissionJson)" Title="Permissions"/>
        </View>
    </FastCrud>
</div>

@code
{
    private void OnConfigure(FastCrudConfiguration<ApiKey> configuration)
    {
        configuration.ValidateCreate = async apiKey =>
        {
            // TODO: Remove this when correct permission editor exists
            if (string.IsNullOrEmpty(apiKey.PermissionJson))
                apiKey.PermissionJson = "[]";

            var key = Formatter.GenerateString(32);
            apiKey.Key = key;

            await ClipboardService.Copy(key);
            await ToastService.Info("Copied api key into your clipboard");
        };
    }

    private void OnConfigureFrom(FastFormConfiguration<ApiKey> configuration, ApiKey _)
    {
        configuration.AddProperty(x => x.Description)
            .WithDefaultComponent()
            .WithDescription("Write a note here for which application the api key is used for")
            .WithValidation(FastFormValidators.Required);

        configuration.AddProperty(x => x.ExpiresAt)
            .WithDefaultComponent()
            .WithDescription("Specify when the api key should expire");

        configuration.AddProperty(x => x.PermissionJson)
            .WithDefaultComponent()
            .WithName("Permissions");
    }
}
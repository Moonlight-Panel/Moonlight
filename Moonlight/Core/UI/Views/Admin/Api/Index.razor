@page "/admin/api"

@using MoonCore.Services
@using Moonlight.Core.Configuration
@using Moonlight.Core.Interfaces
@using Moonlight.Core.Services
@using Moonlight.Core.UI.Components.Navigations

@inject PluginService PluginService
@inject ConfigService<CoreConfiguration> ConfigService

@attribute [RequirePermission(9998)]

<AdminApiNavigation Index="0" />

<Tooltip>
    These apis allow other applications to communicate with moonlight and for example create a new user.
    These apis are still work in progress and might change a lot so dont be mad at me if i change how they work.
</Tooltip>

<div class="mt-5">
    <div class="card card-body py-3 px-5">
        <LazyLoader Load="LoadApis">
            <CrudTable TItem="ApiModel" ItemSource="Apis" PageSize="100" ShowPagination="false">
                <CrudColumn TItem="ApiModel" Field="@(x => x.Id)" Title="Id" />
                <CrudColumn TItem="ApiModel" Field="@(x => x.Name)" Title="Name" />
                <CrudColumn TItem="ApiModel" Field="@(x => x.Version)" Title="Version" />
                <CrudColumn TItem="ApiModel">
                    <Template>
                        <div class="text-end">
                            @if (ConfigService.Get().Development.EnableApiReference)
                            {
                                <a href="/api/core/reference?document=@(context.Id)" target="_blank" class="btn btn-primary">
                                    <i class="bx bx-sm bx-link"></i>
                                    Reference
                                </a>
                            }
                            else
                            {
                                <button type="button" class="btn btn-primary disabled" disabled="disabled">
                                    <i class="bx bx-sm bx-link"></i>
                                    Enable reference in settings
                                </button>
                            }
                        </div>
                    </Template>
                </CrudColumn>
            </CrudTable>
        </LazyLoader>
    </div>
</div>

@code
{
    private ApiModel[] Apis;

    private async Task LoadApis(LazyLoader _)
    {
        List<ApiModel> models = new();
        
        foreach (var definition in await PluginService.GetImplementations<IApiDefinition>())
        {
            models.Add(new()
            {
                Id = definition.GetId(),
                Name = definition.GetName(),
                Version = definition.GetVersion()
            });
        }

        Apis = models.ToArray();
    }

    class ApiModel
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public string Version { get; set; }
    }
}

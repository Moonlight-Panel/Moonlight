@page "/account"

@using System.ComponentModel.DataAnnotations
@using Moonlight.Core.Services
@using Moonlight.Core.Models.Forms
@using Mappy.Net
@using Moonlight.Core.Database.Entities
@using Moonlight.Core.Models.Abstractions
@using Moonlight.Core.UI.Components.Navigations

@inject IdentityService IdentityService
@inject ToastService ToastService
@inject IAuthenticationProvider AuthenticationProvider

<div class="card card-body bg-primary mb-8">
    <div class="d-flex align-items-center">
        <span class="fs-2 fw-semibold">
            @* the @@@ looks weird, ik that, it will result in @username *@

            @@@IdentityService.GetUser().Username
        </span>
    </div>
</div>

<AccountNavigation Index="0"/>

<div class="row g-5">
    <div class="col-md-3 col-12">
        <div class="card card-body h-100">
            <div class="d-flex flex-column justify-content-center">
                <div class="d-flex justify-content-center">
                    <div class="symbol symbol-100px symbol-lg-160px symbol-fixed">
                        <img src="/api/core/avatar" alt="image">
                    </div>
                </div>
                <div class="fs-4 mt-5 text-center">
                    To change your profile picture go to <a href="https://gravatar.com/">Gravatar</a> and
                    register with the same email address you are using here
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-9 col-12">
        <div class="card">
            <div class="card-body">
                <FastForm @ref="Form" Model="Model" OnConfigure="OnConfigure" />
            </div>
            <div class="card-footer d-flex justify-content-end">
                <WButton OnClick="SaveChanges" CssClasses="btn btn-primary">Save changes</WButton>
            </div>
        </div>
    </div>
</div>

@code
{
    private UpdateAccountForm Model;
    private FastForm<UpdateAccountForm> Form;

    protected override void OnInitialized()
    {
        // Create a copy of the user
        Model = Mapper.Map<UpdateAccountForm>(IdentityService.GetUser());
    }

    private void OnConfigure(FastFormConfiguration<UpdateAccountForm> configuration)
    {
        configuration.AddProperty(x => x.Username)
            .WithComponent<StringComponent>(component =>
            {
                component.ColumnsMd = 12;
            })
            .WithValidation(FastFormValidators.Required)
            .WithValidation(RegexValidator.Create("^[a-z][a-z0-9]*$", "Usernames can only contain lowercase characters and numbers and should not start with a number"))
            .WithValidation(x => x.Length >= 6 ? ValidationResult.Success : new("The username is too short"))
            .WithValidation(x => x.Length <= 20 ? ValidationResult.Success : new("The username cannot be longer than 20 characters"));

        configuration.AddProperty(x => x.Email)
            .WithComponent<StringComponent>(component =>
            {
                component.ColumnsMd = 12;
                component.Type = "email";
            })
            .WithValidation(FastFormValidators.Required)
            .WithValidation(RegexValidator.Create("^.+@.+$", "You need to provide a valid email address"));
    }

    private async Task SaveChanges()
    {
        if(!await Form.Submit())
            return;
        
        await AuthenticationProvider.ChangeDetails(IdentityService.GetUser(), Model.Email, Model.Username);
        await ToastService.Success("Successfully updated details");

        // This will trigger a re-render as well as an update of the model
        await IdentityService.Authenticate();
    }
}
@using MoonCore.Exceptions
@using MoonCoreUI.Services
@using Moonlight.Core.Models.Abstractions
@using Moonlight.Core.Models.Forms
@using Moonlight.Core.Services

@inject ToastService ToastService
@inject IAuthenticationProvider AuthenticationProvider
@inject AlertService AlertService
@inject IdentityService IdentityService


<div class="card">
    <SmartForm Model="PasswordForm" OnValidSubmit="OnValidSubmitPassword">
        <div class="card-body">
            <h3>Change Password</h3>
            <div class="row">
                <AutoForm Model="PasswordForm" Columns="12" />
            </div>
            <div class="d-flex justify-content-end mt-6">
                <button class="btn btn-primary" type="submit"><i class="bx bx-check"></i> Save changes</button>
            </div>
        </div>
    </SmartForm>
</div>

@code {

    private readonly ChangePasswordForm PasswordForm = new();
    
    private async Task OnValidSubmitPassword()
    {
        if (!await AlertService.YesNo("Do you really want to change your password? This cannot be undone."))
            return;
            
        if (PasswordForm.NewPassword != PasswordForm.RepeatNewPassword)
            throw new DisplayException("The passwords do not match");
        
        await AuthenticationProvider.ChangePassword(IdentityService.CurrentUser, PasswordForm.NewPassword);
        
        await ToastService.Success("Successfully changed password");
        await IdentityService.Authenticate(true);
    }

}
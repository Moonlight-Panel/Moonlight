@using Moonlight.Core.Configuration

@inject ConfigService<CoreConfiguration> ConfigService
@inject IdentityService IdentityService

@if (ShowBanner)
{
    <div class="mb-12 mx-8 d-flex justify-content-end fixed-bottom no-pointer-events" style="pointer-events: none;">
        <div style="pointer-events: all; max-width: var(--bs-breakpoint-sm)" class="w-100">
            <div class="card shadow-lg">
                <div class="card-body">
                    <h3 class="mb-4">@BannerTitle</h3>
                    <p class="text-muted fs-6">
                        @BannerText
                    </p>
                    <span class="d-flex gap-5">
                        <WButton OnClick="() => SetAnswer(true)" CssClasses="btn btn-primary btn-smr">
                            <i class="bx bx-check"></i> @ConsentText
                        </WButton>
                        <WButton OnClick="() => SetAnswer(false)" CssClasses="btn btn-secondary btn-sm cursor-pointer">
                            <i class="bx bx-x"></i> @DeclineText
                        </WButton>
                    </span>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    private bool ShowBanner;

    private string BannerTitle;
    private string BannerText;
    private string ConsentText;
    private string DeclineText;

    protected override void OnInitialized()
    {
        var config = ConfigService.Get().Customisation.CookieConsentBanner;

        BannerTitle = config.BannerTitle;
        BannerText = config.BannerText;
        ConsentText = config.ConsentText;
        DeclineText = config.DeclineText;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var userWasAsked = await IdentityService.HasFlag("CookieAsked");

            if (ConfigService.Get().Customisation.CookieConsentBanner.Enabled && !userWasAsked)
                ShowBanner = true;

            await InvokeAsync(StateHasChanged);
        }
    }

    private async Task SetAnswer(bool answer)
    {
        if (!IdentityService.IsAuthenticated)
            return;

        await IdentityService.SetFlag("CookieAsked", true);

        if (answer)
            await IdentityService.SetFlag("CookieConsent", true);

        await InvokeAsync(StateHasChanged);
    }
}
@using Mappy.Net
@using MoonCoreUI.Services
@using Moonlight.Core.Models.Abstractions
@using Moonlight.Core.Models.Forms
@using Moonlight.Core.Services
@inject IdentityService IdentityService
@inject ToastService ToastService
@inject IAuthenticationProvider AuthenticationProvider
@inject AlertService AlertService

<LazyLoader Load="Load">

    <button class="btn btn-@(!ChangeDetails ? "secondary" : "warning") btn-sm mb-3" @onclick="() => { ChangeDetails = !ChangeDetails; StateHasChanged(); }">
        @if (!ChangeDetails)
        {
        <span>
                <i class="bx bx-pencil"></i>
                Edit Details
            </span>

        }
        else
        {
        <span>
                <i class="bx bx-undo"></i>
                Go Back
            </span>
        }
    </button>
    
    @if (!ChangeDetails)
    {
        <div>
            <div class="d-flex justify-content-center">
                <div class="symbol symbol-125px symbol-lg-175px symbol-fixed position-relative">
                    <span class="position-absolute w-30px translate-middle badge rounded-pill cursor-pointer bg-info-active d-flex justify-content-center align-items-center" style="bottom: 0.5%; right:0.5%; aspect-ratio: 1" @onclick="ShowGravatarInfo">
                        <h4 class="m-0">
                            ?
                        </h4>
                    </span>
                    <img src="/api/core/avatar" alt="User Profile" class="rounded rounded-circle">
                </div>
            </div>
            <div class="text-center mt-8">
                <h2>@IdentityService.CurrentUser.Username</h2>
                <h5 class="text-muted fw-normal">
                    @IdentityService.CurrentUser.Email
                </h5>
            </div>
        </div>
    }
    else
    {
        <SmartForm Model="Form" OnValidSubmit="Update">
            <h3>Update User Information</h3>
            <AdvancedAutoForm TForm="UpdateAccountForm" Model="Form"/>
            <div class="d-flex justify-content-end">
                <button class="btn btn-primary btn-sm" type="submit"><i class="bx bx-check"></i> Save changes</button>
            </div>
        </SmartForm>
    }
</LazyLoader>

@code {

    private UpdateAccountForm Form = new();

    private bool ChangeDetails = false;

    private Task Load(LazyLoader _)
    {
        Form = Mapper.Map<UpdateAccountForm>(IdentityService.CurrentUser);

        return Task.CompletedTask;
    }

    private async Task Update()
    {
        await AuthenticationProvider.ChangeDetails(IdentityService.CurrentUser, Form.Email, Form.Username);
        await ToastService.Success("Successfully updated details");

        // Change back to the account view card
        ChangeDetails = !ChangeDetails;
        await InvokeAsync(StateHasChanged);
        
        // This will trigger a re-render as well as an update of the model
        await IdentityService.Authenticate(true);
    }

    private async Task ShowGravatarInfo()
    {
        await AlertService.Info("To change your profile picture go to https://gravatar.com/ and register with the same email address you are using here");
    }

}